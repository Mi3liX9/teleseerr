name: Build and Push to GHCR

on:
  push:
    branches:
      - '**' # Match all branches
  delete:
    branches:
      - '**' # Match all branches

jobs:
  build_and_push:
    if: github.event_name == 'push'
    permissions:
      packages: write
      contents: read

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push the Image to GHCR
        run: |
          IMAGE_TAG=ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

  delete_image:
    if: github.event_name == 'delete'
    permissions:
      packages: write

    runs-on: ubuntu-latest

    steps:
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Delete Docker image from GHCR
        run: |
          IMAGE_TAG=ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          IMAGE_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://ghcr.io/v2/${{ github.repository }}/tags/list | jq -r ".tags[] | select(. == \"${{ github.ref_name }}\")")
          if [ -n "$IMAGE_ID" ]; then
            curl -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://ghcr.io/v2/${{ github.repository }}/manifests/$IMAGE_ID
          fi
